'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/alexandria/docs/architecture/alexandria/','title':"Alexandria",'content':"Alexandria Architecture "});index.add({'id':1,'href':'/alexandria/docs/architecture/','title':"Architecture",'content':"Architecture Initial Idea: "});index.add({'id':2,'href':'/alexandria/docs/architecture/pharos/aws/','title':"AWS Pharos",'content':"AWS Pharos "});index.add({'id':3,'href':'/alexandria/docs/devenv/','title':"Development Setup",'content':"Using MicroK8s (for Mac user)\nGet and install Multipass https://microk8s.io/docs/install-alternatives#macos\nSpin up a local machine and exec into it\nmultipass launch --name microk8s --mem 4G --disk 40G multipass shell microk8s Next wie need to install microk8s and set an alias to make our life easier\nsudo snap install microk8s --classic --channel=1.17/stable vim ~/.bash_aliases alias k=\u0026#39;sudo microk8s.kubectl\u0026#39; #save \u0026amp; close it . ~/.bash_aliases k cluster-info Now we have a K8s running, next we need to spin up some basic services\nsudo microk8s.enable dns dashboard storage helm3 rbac k get all -A Next we need to be sure that we can do access the K8s in the VM\nsudo iptables -P FORWARD ACCEPT Accessing Service on K8s To access we need actually two things 1. the IP of the VW and 2. the API for the service\nmultipass list #take the IP from your host/client #and the api from K8s k cluster-info #https://127.0.0.1:16443/api/v1/namespaces/kube-system/services/monitoring-grafana/proxy In your Webbrowser you now need to replace the local IP with the IP of the VM, then you will get asked for username and password. This you get in the VM by running\nsudo microk8s.config #in the end of the config you find the admin and PW Now you should be able to log into the Dashboard! This way you can reach all exposed workload.\nConfigure you local kubeconfig At the moment you run K8s within the VM and you can reach the API, but you can\u0026rsquo;t use kubectl from a local machine. Therefore you need to update your kubeconfig which you can mostly found in your root under .kube/config In a first step you need from within the VM the Kubeconfig\nsudo microk8s.kubectl config view --raw Then you open the kubeconfig and add cluster, context and user. Don\u0026rsquo;t forget to replace the local IP with the VM IP. In the End your kubeconfig should looks like this:\napiVersion: v1 clusters: - cluster: certificate-authority-data: SUPERSECRET_CA_AUTH server: https://127.0.0.1:16443 name: microk8s-cluster contexts: - context: cluster: docker-desktop user: docker-desktop name: docker-desktop - context: cluster: microk8s-cluster user: admin name: microk8s current-context: microk8s kind: Config preferences: {} users: - name: admin user: password: SUPERSECRETPASSWORT username: admin Save the config and run on you host/client\nkubectl get all -A If you see all the resources within the K8s from the VM you are done!\nAbout Multipass Start VM\nmultipass start microk8s Stop VM\nmultipass stop microk8s Exec/Shell into VM\nmultipass shell microk8s Delete \u0026amp; Clean up VMs\nmultipass delete microk8s multipass purge "});index.add({'id':4,'href':'/alexandria/docs/writing-docs/','title':"Documenting",'content':"How to Document Style Guide I would like to orient on the Google Developer Documentation Style Guide\nHugo We throw the documentation in here, which Hugo takes and make a nice page from. There is no big difference in how to write it, just that we directly need to think about where to place what. However, we will have a fast browsable and clean page instead for spread around or to long md\u0026rsquo;s.\nPages To create new pages/files go to /docs/Alexandria/content/docs/ You can structure files in folders, if a folder should represent a overview page you need to setup a _index.md file. Else just write a new md file, don\u0026rsquo;t forget the header:\n--- weight: 1 # order of the page bookFlatSection: true # if a navigation on the right site for the page should be shown title: \u0026#34;Documenting\u0026#34; # title --- Images If you want to use a picture, these can be placed within the content folder or better within the static folder. If placed in static you can link to it from everywhere as follow:\n![Hihlevel Arch](/Highlevel.png) Specify Code Block Types When explain something with code references or so please ensure to use within markdown the possibility to highlight for specific languages so it turns\n```go func main() func main() { fmt.Println(\u0026#34;Hello you!\u0026#34;) } or\n```sh kubectl delete -f https://raw.githubusercontent.com/arangodb/kube-arangodb/${VERSION}/manifests/arango-crd.yaml kubectl delete -f https://raw.githubusercontent.com/arangodb/kube-arangodb/${VERSION}/manifests/arango-crd.yaml About this Theme This theme has some nice add ons which you can discover here and find example for it on the github repo.\n"});index.add({'id':5,'href':'/alexandria/docs/architecture/pharos/k8s/','title':"Kubernetes Pharos",'content':"Kubernetes Pharos "});index.add({'id':6,'href':'/alexandria/docs/architecture/pharos/','title':"Pharos",'content':"Pharos Architecture "});index.add({'id':7,'href':'/alexandria/docs/architecture/datamodel/','title':"Datamodel",'content':"Datamodel "});index.add({'id':8,'href':'/alexandria/docs/','title':"Docs",'content':""});})();